{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Get Event 1 Report Success Response Schema",
    "type": "object", 
    "required": [
          "processingDate",
          "schemeDetails",
          "eventReportDetails"
    ],
    "properties": {
          "processingDate": {
            "type": "string",
            "description": "The date the message was processed",
            "format": "date-time"
          },
          "schemeDetails": {
            "type": "object",
            "required": [
              "pSTR",
              "schemeName"
            ],
            "additionalProperties": false,
            "properties": {
              "pSTR": {
                "type": "string",
                "pattern": "[0-9]{8}[A-Z]{2}"
              },
              "schemeName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 160
              }
            }
          },
          "eventReportDetails": {
            "type": "object",
            "required": [
			  "reportFormBundleNumber",		
              "reportStartDate",
              "reportEndDate",
              "reportVersionNumber",
              "reportSubmittedDateAndTime"
            ],
            "additionalProperties": false,
            "properties": {
              "reportFormBundleNumber": {
                "type": "string",
                "pattern": "^[0-9]{12}$"              
              }, 	
              "reportStartDate": {
                "$ref": "#/definitions/dateType"
              },
              "reportEndDate": {
                "$ref": "#/definitions/dateType"
              },
			  "reportStatus": {
				"description": "Possible values are Compiled or Submitted",
				"type": "string",
				"enum": [
					"Compiled",
					"Submitted"
				]
			  },	              
              "reportVersionNumber": {
                "type": "string",
                "pattern": "[0-9]{3}"
              },
              "reportSubmittedDateAndTime": {
                "type": "string",
                "pattern": "[2-9][0-9]{3}-(01|02|03|04|05|06|07|08|09|10|11|12)-([0][1-9]|[1-2][0-9]|[3][0-1])T([0-1][0-9]|[2][0-3]):[0-5][0-9]:[0-5][0-9]Z"
               }
             }
            },  
		  "event1Details": {
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"required": [
					"memberStatus",
					"memberType",
					"unAuthorisedPaymentDetails"
				], 
				"properties": {
					"amendedVersion": {
						"$ref": "#/definitions/versionType"
					},
					"memberStatus": {
						"description": "Possible values are New, Changed or Deleted",
						"type": "string",
						"minLength": 1,
						"maxLength": 12,
						"enum": [
							"New",
							"Changed",
							"Deleted"
						]
					},	
					"memberType": {
						"description": "Possible values are Individual or Employer",
						"type": "string",
						"minLength": 1,
						"maxLength": 10,
						"enum": [
							"Individual",
							"Employer"
						]
					},	
					"individualMemberDetails": {
						"description": "This node is mandatory if the Member Type is 01-Individual",
						"type": "object",
						"required": [
							"firstName",
							"lastName",
							"nino"
						],
						"additionalProperties": false,
						"properties": {
							"title": {
								"description": "Possible values are 0001: Mr, 0002: Mrs, 0003: Miss, 0004: Ms, 0005: Dr 0006: Sir, 0009: Professor, 0010: Lord",
								"type": "string",
								"minLength": 1,
								"maxLength": 10,
								"enum": [
									"Mr",
									"Mrs",
								    "Miss",
								    "Ms",
								    "Dr",
								    "Sir",
								    "Professor",
								    "Lord"
								]
							},	
							"firstName": {
								"$ref": "#/definitions/nameType"
							},
							"middleName": {
								"$ref": "#/definitions/nameType"
							},
							"lastName": {
								"$ref": "#/definitions/nameType"	
							},
							"nino": {
								"type": "string",
								"minLength": 9,
								"maxLength": 9,	
								"pattern": "^((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?$"
							},
							"signedMandate": {
								"$ref": "#/definitions/yesNoType"	
							},
							"pmtMoreThan25PerFundValue": {
								"$ref": "#/definitions/yesNoType"	
							},
							"schemePayingSurcharge": {
								"$ref": "#/definitions/yesNoType"	
							}
						}	
					},	
					"employerMemDetails": {
						"description": "This node is mandatory if the Member Type is 02-Employer",
						"type": "object",
						"required": [
							"compOrOrgName",
							"crnNumber",
							"addressDetails"
						],
						"additionalProperties": false,
						"properties": {
							"compOrOrgName": {
								"type": "string",
								"minLength": 1,
								"maxLength": 160,
								"pattern": "^[a-zA-Z0-9\\s\\\\u00C0-\\\\u00FF!#$%&'‘’\\\\\"“”«»()*+,.\\/:;=?@\\\\\\[\\\\\\]£€¥\\\\u005C\\\\u2014\\\\u2013\\\\u2010\\\\u002d]{1,160}$"	
							},		
							"crnNumber": {
								"type": "string",
								"minLength": 7,
								"maxLength": 8,
								"pattern": "^[A-Za-z0-9 -]{1,8}$"
							},	
							"addressDetails": {
								"$ref": "#/definitions/addressDetailsType"	
							}
						}	
					},		
					"unAuthorisedPaymentDetails": {
						"type": "object",
						"required": [
							"unAuthorisedPmtType1",
							"dateOfUnauthorisedPayment",
							"valueOfUnauthorisedPayment"																		
						],
						"additionalProperties": false,
						"properties": {
							"unAuthorisedPmtType1": {
								"description": "Possible Values are 100: Benefit in kind, 110: Transfer to non-registered pensions scheme, 120: Error in calculating tax free lump sums, 130: Benefits paid early other than on the grounds of ill-health, protected pension age or a winding up lump sum, 140: Refund of contributions, 150: Overpayment of pension/written off, 200: Loans to or in respect of the employer exceeding 50% of the value of the fund, 300: Residential property held directly or indirectly by an investment-regulated pension scheme, 310: Tangible moveable property held directly or indirectly by an investment-regulated pension scheme, 320: Court Order Payment/Confiscation Order, 330: Other",
								"type": "string",
								"enum": [
                                          "Benefit in kind",
                                          "Transfer to non-registered pensions scheme",
                                          "Error in calculating tax free lump sums",
                                          "Benefits paid early other than on the grounds of ill-health, protected pension age or a winding up lump sum",
                                          "Refund of contributions",
                                          "Overpayment of pension/written off",
                                          "Loans to or in respect of the employer exceeding 50% of the value of the fund",
                                          "Residential property held directly or indirectly by an investment-regulated pension scheme",
                                          "Tangible moveable property held directly or indirectly by an investment-regulated pension scheme",
                                          "Court Order Payment/Confiscation Order",
                                          "Other"																		
								]		
							},
							"unAuthorisedPmtType2": {
								"description": "Possible Values are 110-1: Transfer to an Employer Financed retirement Benefit scheme (EFRB), 110-2: Transfer to a non-recognised pension scheme which is not a qualifying overseas pension scheme, 140-1: Widow and/or orphan, 140-2: Refund of contributions other, 150-1: Death of member, 150-2: Death of dependent, 150-3: Dependent no longer qualified for pension, 150-4: Overpayment of pension/written off other",
								"type": "string",
								"enum": [
                                          "Transfer to an Employer Financed retirement Benefit scheme (EFRB)",
                                          "Transfer to a non-recognised pension scheme which is not a qualifying overseas pension scheme",
                                          "Widow and/or orphan",
                                          "Refund of contributions other",
                                          "Death of member",
                                          "Death of dependent",
                                          "Dependent no longer qualified for pension",
                                          "Overpayment of pension/written off other"																	
								]		
							},
							"freeTxtOrSchemeOrRecipientName": {
								"description": "This field is applicable if Unauthorized Payment Type 1 is one of the following; 100 - Benefit in kind - Free text, 110 - Transfer to non-registered pensions scheme (Provide Scheme Name), 120 - Error in calculating tax free lump sums - Free text130 - Benefits paid early other than on the grounds of ill-health, protected pension age or a winding up lump sum - Free text,3 10 - Tangible moveable property held directly or indirectly by an investment-regulated pension scheme - Free Text, 320 - Court Order Payment/Confiscation Order (Provide Name of Receipnt Name), 330 - Other - Free Text",	
								"type": "string",
								"minLength": 1,
								"maxLength": 160,																	
								"pattern":"^[a-zA-Z0-9\\s\\\\u00C0-\\\\u00FF!#$%&'‘’\\\\\"“”«»()*+,.\\/:;=?@\\\\\\[\\\\\\]£€¥\\\\u005C\\\\u2014\\\\u2013\\\\u2010\\\\u002d]{1,160}$"		
							},
							"pstrOrReference": {
								"description": "This field is applicable if Unauthorized Payment Type 1 is one of the following.110 - Transfer to non-registered pensions scheme (Provide PSTR ID or Reference Number)",	
								"type": "string",
								"minLength": 1,
								"maxLength": 160,																	
								"pattern": "^[a-zA-Z0-9\\s\\\\u00C0-\\\\u00FF!#$%&'‘’\\\\\"“”«»()*+,.\\/:;=?@\\\\\\[\\\\\\]£€¥\\\\u005C\\\\u2014\\\\u2013\\\\u2010\\\\u002d]{1,160}$"		
							},	
							"pmtAmtOrLoanAmt": {
								"description": "This field is applicable if Unauthorized Payment Type 1 is one of the following; 200 - Loans to or in respect of the employer exceeding 50% of the value of the fund (Provide Loan Amout), 320 - Court Order Payment/Confiscation Order (Provide payment amount)",
								"$ref": "#/definitions/monetaryValueType"	
							},
							"fundValue": {
								"description": "This field is applicable if Unauthorized Payment Type 1 is one of the following; 200 - Loans to or in respect of the employer exceeding 50% of the value of the fund (Provide Value of the Fund)",
								"$ref": "#/definitions/monetaryValueType"	
							},	
							"dateOfUnauthorisedPayment": {
								"$ref": "#/definitions/dateType"	
							},	
							"valueOfUnauthorisedPayment": {
								"$ref": "#/definitions/monetaryValueType"	
							},	
							"residentialPropertyAddress": {
								"description": "This node is applicable if Unauthorised Payment Type 1 is 300",
								"$ref": "#/definitions/addressDetailsType"	
							}
						}		
					}	
				}
			}																						
		}
    },
    "definitions": {
		"dateType": {
			"type": "string",
			"pattern": "^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
		},
		"versionType": {
			"description": "version number from 001 to 999",
			"type": "string",
			"pattern": "^[0-9]{3}$"
		},
		"nameType": {
			"type": "string",
			"minLength": 1,
			"maxLength": 35,	
			"pattern": "^[a-zA-Z &`\\-\\'\\.^]{1,35}$"
		},
		"addressDetailsType": {
			"type": "object",
			"oneOf": [
				{
					"type": "object",	
					"required": [
						"addressLine1",
						"addressLine2",
						"postCode",
						"countryCode"
					],  
					"properties": {	
						"addressLine1": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine2": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine3": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine4": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"postCode": {
							"$ref": "#/definitions/UKPostCodeType"	
						},
						"countryCode": {
							"$ref": "#/definitions/UKCountryCodeType"	
						} 
					} 	
				},
				{
					"type": "object",
					"required": [
						"addressLine1",
						"addressLine2",
						"countryCode"
					],  
					"properties": {	
						"addressLine1": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine2": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine3": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"addressLine4": {
							"$ref": "#/definitions/addressLineType"	
						}, 
						"postCode": {
							"$ref": "#/definitions/nonUKPostCodeType"	
						},
						"countryCode": {
							"$ref": "#/definitions/nonUKCountryCodeType"	
						}  
					}
				}
			]	
		},
        "addressLineType": {
			"type": "string",
			"minLength": 1,
			"maxLength": 35,	
			"pattern": "^[A-Za-z0-9 &!'‘’\"“”(),./—–‐-]{1,35}$"
		},  
        "UKPostCodeType": {
			"description": "Mandatory for UK Address",
			"type": "string",
			"minLength": 1,
			"maxLength": 10,	
			"pattern": "^[A-Z]{1,2}[0-9][0-9A-Z]?\\s?[0-9][A-Z]{2}$|BFPO\\s?[0-9]{1,3}$"
		}, 
		"nonUKPostCodeType": {
			"description": "Not Mandatory for Non UK Address",
			"type": "string",
			"minLength": 1,
			"maxLength": 10,	
			"pattern": "^[A-Za-z0-9 ]{1,10}$"
		}, 
		"UKCountryCodeType": {
			"description": "UK Country Codes",
			"type": "string",
			"minLength": 2,
			"maxLength": 2,	
			"enum": [
				"GB"
			]
		},
        "nonUKCountryCodeType": {
			"description": "Non UK Country Codes",
			"type": "string",
			"minLength": 2,
			"maxLength": 2,	
			"enum": [
				"AD",
				"AE",
				"AF",
				"AG",
				"AI",
				"AL",
				"AM",
				"AN",
				"AO",
				"AQ",
				"AR",
				"AS",
				"AT",
				"AU",
				"AW",
				"AX",
				"AZ",
				"BA",
				"BB",
				"BD",
				"BE",
				"BF",
				"BG",
				"BH",
				"BI",
				"BJ",
				"BM",
				"BN",
				"BO",
				"BQ",
				"BR",
				"BS",
				"BT",
				"BV",
				"BW",
				"BY",
				"BZ",
				"CA",
				"CC",
				"CD",
				"CF",
				"CG",
				"CH",
				"CI",
				"CK",
				"CL",
				"CM",
				"CN",
				"CO",
				"CR",
				"CS",
				"CU",
				"CV",
				"CW",
				"CX",
				"CY",
				"CZ",
				"DE",
				"DJ",
				"DK",
				"DM",
				"DO",
				"DZ",
				"EC",
				"EE",
				"EG",
				"EH",
				"ER",
				"ES",
				"ET",
				"FC",
				"FI",
				"FJ",
				"FK",
				"FM",
				"FO",
				"FR",
				"GA",
				"GD",
				"GE",
				"GF",
				"GG",
				"GH",
				"GI",
				"GL",
				"GM",
				"GN",
				"GP",
				"GQ",
				"GR",
				"GS",
				"GT",
				"GU",
				"GW",
				"GY",
				"HK",
				"HM",
				"HN",
				"HR",
				"HT",
				"HU",
				"ID",
				"IE",
				"IL",
				"IM",
				"IN",
				"IO",
				"IQ",
				"IR",
				"IS",
				"IT",
				"JE",
				"JM",
				"JO",
				"JP",
				"KE",
				"KG",
				"KH",
				"KI",
				"KM",
				"KN",
				"KP",
				"KR",
				"KW",
				"KY",
				"KZ",
				"LA",
				"LB",
				"LC",
				"LI",
				"LK",
				"LR",
				"LS",
				"LT",
				"LU",
				"LV",
				"LY",
				"MA",
				"MC",
				"MD",
				"ME",
				"MF",
				"MG",
				"MH",
				"MK",
				"ML",
				"MM",
				"MN",
				"MO",
				"MP",
				"MQ",
				"MR",
				"MS",
				"MT",
				"MU",
				"MV",
				"MW",
				"MX",
				"MY",
				"MZ",
				"NA",
				"NC",
				"NE",
				"NF",
				"NG",
				"NI",
				"NL",
				"NO",
				"NP",
				"NR",
				"NU",
				"NZ",
				"OM",
				"PA",
				"PE",
				"PF",
				"PG",
				"PH",
				"PK",
				"PL",
				"PM",
				"PN",
				"PR",
				"PS",
				"PT",
				"PW",
				"PY",
				"QA",
				"RE",
				"RO",
				"RS",
				"RU",
				"RW",
				"SA",
				"SB",
				"SC",
				"SD",
				"SE",
				"SG",
				"SH",
				"SI",
				"SJ",
				"SK",
				"SL",
				"SM",
				"SN",
				"SO",
				"SR",
				"SS",
				"ST",
				"SV",
				"SX",
				"SY",
				"SZ",
				"TC",
				"TD",
				"TF",
				"TG",
				"TH",
				"TJ",
				"TK",
				"TL",
				"TM",
				"TN",
				"TO",
				"TP",
				"TR",
				"TT",
				"TV",
				"TW",
				"TZ",
				"UA",
				"UG",
				"UM",
				"US",
				"UY",
				"UZ",
				"VA",
				"VC",
				"VE",
				"VG",
				"VI",
				"VN",
				"VU",
				"WF",
				"WS",
				"YE",
				"YT",
				"ZA",
				"ZM",
				"ZW"
			]
		},
		"yesNoType": {
			"description": "Possible values are No or Yes",
			"type": "string",
			"minLength": 2,
			"maxLength": 3,	
			"enum": [
				"No",
				"Yes"
			]
		},
		"monetaryValueType": {
			"description": "Possible values are No or Yes",
			"type": "number",
			"minimum": 0.00,
			"maximum": 99999999999.99
		}    
    }
}